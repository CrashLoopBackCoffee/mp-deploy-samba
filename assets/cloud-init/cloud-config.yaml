#cloud-config
hostname: "{{ vm.name }}"
groups:
  - "{{ smb.group }}"
users:
  - default
  - name: "{{ vm.ssh_user }}"
    groups:
      - sudo
    shell: /bin/bash
    ssh_authorized_keys:
      - "{{ vm.ssh_public_key }}"
    lock_passwd: true
    sudo: ALL=(ALL) NOPASSWD:ALL
  - name: "{{ smb.remote.username }}"
    groups:
      - "{{ smb.group }}"
  - name: "{{ smb.k8s.username }}"
    groups:
      - "{{ smb.group }}"
device_aliases:
  data: /dev/vdb
disk_setup:
  data:
    table_type: gpt
    layout: true
    overwrite: false
fs_setup:
  - label: data
    filesystem: ext4
    device: data
mounts:
  - [data, "{{ vm.data_disk_mount }}"]
write_files:
  - path: /etc/samba/smb.conf
    permissions: '0644'
    append: false
    content: |
      [global]
      workgroup = WORKGROUP
      server string = Samba Server %h
      interfaces = lo eth0
      bind interfaces only = yes

      log file = /var/log/samba/log.%m
      max log size = 1000
      logging = file
      panic action = /usr/share/samba/panic-action %d

      server role = standalone server
      obey pam restrictions = yes
      unix password sync = yes
      passwd program = /usr/bin/passwd %u
      passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .
      pam password change = yes

      map to guest = bad user
      usershare allow guests = yes
{% for share in smb.shares %}

      [{{ share.name }}]
      comment = Kubernetes Share {{ share.name }}
      path = {{ vm.data_disk_mount }}/{{ share.name }}
      read only = yes
      write list = {% if share.k8s_write %}{{ smb.k8s.username }} {% endif %}{% if share.remote_write %}{{ smb.remote.username }}{% endif %}
      browseable = yes
      guest ok = no
      valid users = @{{ smb.remote.username }} @{{ smb.k8s.username }}
      force group = "{{ smb.group }}"
{% endfor %}
package_upgrade: true
packages:
  - apt-transport-https
  - acl
  - ca-certificates
  - curl
  - gpg
  - net-tools
  - vim
  - samba
  - qemu-guest-agent
runcmd:
  - printf "{{ smb.remote.password }}\n{{ smb.remote.password }}\n" | smbpasswd -a -s {{ smb.remote.username }}
  - printf "{{ smb.k8s.password }}\n{{ smb.k8s.password }}\n" | smbpasswd -a -s {{ smb.k8s.username }}
{% for share in smb.shares %}
  - mkdir -p {{ vm.data_disk_mount }}/{{ share.name }}
  - setfacl -m "g:"{{ smb.group }}":rwx" {{ vm.data_disk_mount }}/{{ share.name }}
  - setfacl -m "d:g:"{{ smb.group }}":rwx" {{ vm.data_disk_mount }}/{{ share.name }}
  - setfacl -m "m:rwx" {{ vm.data_disk_mount }}/{{ share.name }}
{% endfor %}
  - ufw allow samba
  - systemctl restart smbd
  - systemctl enable qemu-guest-agent
  - systemctl start qemu-guest-agent
